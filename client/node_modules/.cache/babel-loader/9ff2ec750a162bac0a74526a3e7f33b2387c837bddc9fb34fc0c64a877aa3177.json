{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\HNDSE\\\\Software Security\\\\CW2\\\\client\\\\src\\\\pages\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  let navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []);\n  const addComment = () => {\n    axios.post(\"http://localhost:3001/comments\", {\n      commentBody: newComment,\n      PostId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log(response.data.error);\n      } else {\n        const commentToAdd = {\n          commentBody: newComment,\n          username: response.data.username\n        };\n        setComments([...comments, commentToAdd]);\n        setNewComment(\"\");\n      }\n    });\n  };\n  const deleteComment = id => {\n    axios.delete(`http://localhost:3001/comments/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(value => {\n        return value.id != id;\n      }));\n    });\n  };\n  const deletePost = id => {\n    axios.delete(`http://localhost:3001/posts/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      navigate(\"/\");\n    });\n  };\n  const editPost = option => {\n    if (option === \"title\") {\n      let newTitle = prompt(\"Enter New Title: \");\n      if (!newTitle || newTitle.trim() === \"\") {\n        alert(\"Title cannot be empty.\");\n        return; // Abort if the input is empty or whitespace\n      }\n      axios.put(\"http://localhost:3001/posts/title\", {\n        newTitle: newTitle,\n        id: id\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(() => {\n        setPostObject({\n          ...postObject,\n          title: newTitle.trim()\n        });\n      }).catch(error => {\n        console.error(\"Error updating title:\", error);\n        alert(\"An error occurred while updating the title.\");\n      });\n    } else if (option === \"body\") {\n      let newPostText = prompt(\"Enter New text: \");\n      if (!newPostText || newPostText.trim() === \"\") {\n        alert(\"Post text cannot be empty.\");\n        return; // Abort if the input is empty or whitespace\n      }\n      axios.put(\"http://localhost:3001/posts/postText\", {\n        newText: newPostText,\n        id: id\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(() => {\n        setPostObject({\n          ...postObject,\n          postText: newPostText.trim()\n        }); //Bug in this syntax (If the prompt empty and hit the enter the bug is encountering)\n      }).catch(error => {\n        console.error(\"Error updating post text:\", error);\n        alert(\"An error occurred while updating the post text.\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          onClick: () => {\n            if (authState.username === postObject.username) {\n              editPost(\"title\");\n            }\n          },\n          children: postObject.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          onClick: () => {\n            if (authState.username === postObject.username) {\n              editPost(\"body\");\n            }\n          },\n          children: postObject.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [postObject.username, authState.username === postObject.username && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deletePost(postObject.id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comment...\",\n          autoComplete: \"off\",\n          value: newComment,\n          onChange: event => {\n            setNewComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \" Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Username: \", comment.username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), comment.commentBody, authState.username === comment.username && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deleteComment(comment.id);\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"88YuSc4S7y9PkkfbgAhBRYX/eeI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","axios","AuthContext","useNavigate","jsxDEV","_jsxDEV","Post","_s","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","authState","navigate","get","then","response","data","addComment","post","commentBody","PostId","headers","accessToken","localStorage","getItem","error","console","log","commentToAdd","username","deleteComment","delete","filter","value","deletePost","editPost","option","newTitle","prompt","trim","alert","put","title","catch","newPostText","newText","postText","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","autoComplete","onChange","event","target","map","comment","key","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/HNDSE/Software Security/CW2/client/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Post() {\r\n  let { id } = useParams();\r\n  const [postObject, setPostObject] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const { authState } = useContext(AuthContext);\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\r\n      setPostObject(response.data);\r\n    });\r\n\r\n    axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\r\n      setComments(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const addComment = () => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:3001/comments\",\r\n        {\r\n          commentBody: newComment,\r\n          PostId: id,\r\n        },\r\n        {\r\n          headers: {\r\n            accessToken: localStorage.getItem(\"accessToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          console.log(response.data.error);\r\n        } else {\r\n          const commentToAdd = {\r\n            commentBody: newComment,\r\n            username: response.data.username,\r\n          };\r\n\r\n          setComments([...comments, commentToAdd]);\r\n          setNewComment(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteComment = (id) => {\r\n    axios\r\n      .delete(`http://localhost:3001/comments/${id}`, {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      })\r\n      .then(() => {\r\n        setComments(\r\n          comments.filter((value) => {\r\n            return value.id != id;\r\n          })\r\n        );\r\n      });\r\n  };\r\n\r\n  const deletePost = (id) => {\r\n    axios\r\n      .delete(`http://localhost:3001/posts/${id}`, {\r\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n      })\r\n      .then(() => {\r\n        navigate(\"/\");\r\n      });\r\n  };\r\n\r\n  const editPost = (option) => {\r\n    if (option === \"title\") {\r\n      let newTitle = prompt(\"Enter New Title: \");\r\n\r\n      if (!newTitle || newTitle.trim() === \"\") {\r\n        alert(\"Title cannot be empty.\");\r\n        return; // Abort if the input is empty or whitespace\r\n      }\r\n\r\n      axios\r\n        .put(\r\n          \"http://localhost:3001/posts/title\",\r\n          {\r\n            newTitle: newTitle,\r\n            id: id,\r\n          },\r\n          {\r\n            headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n          }\r\n        )\r\n        .then(() => {\r\n          setPostObject({ ...postObject, title: newTitle.trim() });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating title:\", error);\r\n          alert(\"An error occurred while updating the title.\");\r\n        });\r\n    } else if (option === \"body\") {\r\n      let newPostText = prompt(\"Enter New text: \");\r\n\r\n      if (!newPostText || newPostText.trim() === \"\") {\r\n        alert(\"Post text cannot be empty.\");\r\n        return; // Abort if the input is empty or whitespace\r\n      }\r\n\r\n      axios\r\n        .put(\r\n          \"http://localhost:3001/posts/postText\",\r\n          {\r\n            newText: newPostText,\r\n            id: id,\r\n          },\r\n          {\r\n            headers: { accessToken: localStorage.getItem(\"accessToken\") },\r\n          }\r\n        )\r\n        .then(() => {\r\n          setPostObject({ ...postObject, postText: newPostText.trim() }); //Bug in this syntax (If the prompt empty and hit the enter the bug is encountering)\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating post text:\", error);\r\n          alert(\"An error occurred while updating the post text.\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"postPage\">\r\n      <div className=\"leftSide\">\r\n        <div className=\"post\" id=\"individual\">\r\n          <div\r\n            className=\"title\"\r\n            onClick={() => {\r\n              if (authState.username === postObject.username) {\r\n                editPost(\"title\");\r\n              }\r\n            }}\r\n          >\r\n            {postObject.title}\r\n          </div>\r\n          <div\r\n            className=\"body\"\r\n            onClick={() => {\r\n              if (authState.username === postObject.username) {\r\n                editPost(\"body\");\r\n              }\r\n            }}\r\n          >\r\n            {postObject.postText}\r\n          </div>\r\n          <div className=\"footer\">\r\n            {postObject.username}\r\n            {authState.username === postObject.username && (\r\n              <button\r\n                onClick={() => {\r\n                  deletePost(postObject.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"rightSide\">\r\n        <div className=\"addCommentContainer\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Comment...\"\r\n            autoComplete=\"off\"\r\n            value={newComment}\r\n            onChange={(event) => {\r\n              setNewComment(event.target.value);\r\n            }}\r\n          />\r\n\r\n          <button onClick={addComment}> Add Comment</button>\r\n        </div>\r\n\r\n        <div className=\"listOfComments\">\r\n          {comments.map((comment, key) => {\r\n            return (\r\n              <div key={key} className=\"comment\">\r\n                <label>Username: {comment.username} </label>\r\n                {comment.commentBody}\r\n                {authState.username === comment.username && (\r\n                  <button\r\n                    onClick={() => {\r\n                      deleteComment(comment.id);\r\n                    }}\r\n                  >\r\n                    X\r\n                  </button>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}