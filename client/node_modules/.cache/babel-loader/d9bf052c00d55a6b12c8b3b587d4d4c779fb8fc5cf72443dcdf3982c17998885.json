{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\HNDSE\\\\Software Security\\\\CW2\\\\client\\\\src\\\\pages\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../CSS/Registration.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registration() {\n  _s();\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  let navigate = useNavigate();\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().min(3, \"Username must be at least 3 characters\").max(15, \"Username cannot exceed 15 characters\").matches(/^[a-zA-Z0-9_]+$/, \"Username can only contain letters, numbers, and underscores\").required(\"Username is required\"),\n    password: Yup.string().min(4, \"Password must be at least 4 characters\").max(20, \"Password cannot exceed 20 characters\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*(),.?\":{}|<>]).{4,20}$/, \"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character\").required(\"Password is required\")\n  });\n  const onSubmit = (data, {\n    setSubmitting,\n    setFieldError\n  }) => {\n    axios.post(\"http://localhost:3001/auth\", data).then(() => {\n      console.log(data);\n      //alert(\"Registration successful!\");\n      navigate(\"/\");\n    }).catch(error => {\n      setFieldError(\"username\", \"This username is already taken.\");\n      console.error(\"Registration error:\", error);\n      //alert(\"An error occurred during registration. Please try again.\");\n    }).finally(() => {\n      setSubmitting(false); // Stop the Formik submission spinner\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"username\",\n          placeholder: \"(Ex. User123...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          type: \"password\",\n          id: \"inputCreatePost\",\n          name: \"password\",\n          placeholder: \"Your Password...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: isSubmitting ? \"Registering...\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Registration, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","jsxDEV","_jsxDEV","Registration","_s","initialValues","username","password","navigate","validationSchema","object","shape","string","min","max","matches","required","onSubmit","data","setSubmitting","setFieldError","post","then","console","log","catch","error","finally","children","isSubmitting","className","fileName","_jsxFileName","lineNumber","columnNumber","name","component","autocomplete","id","placeholder","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/HNDSE/Software Security/CW2/client/src/pages/Registration.js"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../CSS/Registration.css\"\r\n\r\nfunction Registration() {\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .min(3, \"Username must be at least 3 characters\")\r\n      .max(15, \"Username cannot exceed 15 characters\")\r\n      .matches(\r\n        /^[a-zA-Z0-9_]+$/,\r\n        \"Username can only contain letters, numbers, and underscores\"\r\n      )\r\n      .required(\"Username is required\"),\r\n    password: Yup.string()\r\n      .min(4, \"Password must be at least 4 characters\")\r\n      .max(20, \"Password cannot exceed 20 characters\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*(),.?\":{}|<>]).{4,20}$/,\r\n        \"Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character\"\r\n      )\r\n      .required(\"Password is required\"),\r\n  });\r\n\r\n  const onSubmit = (data, { setSubmitting, setFieldError }) => {\r\n    axios\r\n      .post(\"http://localhost:3001/auth\", data)\r\n      .then(() => {\r\n        console.log(data);\r\n        //alert(\"Registration successful!\");\r\n        navigate(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setFieldError(\"username\", \"This username is already taken.\");\r\n        console.error(\"Registration error:\", error);\r\n        //alert(\"An error occurred during registration. Please try again.\");\r\n      })\r\n      .finally(() => {\r\n        setSubmitting(false); // Stop the Formik submission spinner\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form className=\"formContainer\">\r\n            <label>Username: </label>\r\n            <ErrorMessage name=\"username\" component=\"span\" />\r\n            <Field\r\n              autocomplete=\"off\"\r\n              id=\"inputCreatePost\"\r\n              name=\"username\"\r\n              placeholder=\"(Ex. User123...)\"\r\n            />\r\n\r\n            <label>Password: </label>\r\n            <ErrorMessage name=\"password\" component=\"span\" />\r\n            <Field\r\n              autocomplete=\"off\"\r\n              type=\"password\"\r\n              id=\"inputCreatePost\"\r\n              name=\"password\"\r\n              placeholder=\"Your Password...\"\r\n            />\r\n\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              {isSubmitting ? \"Registering...\" : \"Register\"}\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}