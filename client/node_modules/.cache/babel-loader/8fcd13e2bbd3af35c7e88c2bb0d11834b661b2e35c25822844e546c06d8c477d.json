{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\HNDSE\\\\Software Security\\\\CW2\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthState\n  } = useContext(AuthContext);\n  const [captchaToken, setCaptchaToken] = useState(\"\"); // Store the reCAPTCHA token\n  const captchaRef = useRef(null); // Reference to the ReCAPTCHA component\n\n  let navigate = useNavigate();\n  const onChange = token => {\n    setCaptchaToken(token);\n  };\n  const login = async () => {\n    if (!captchaToken) {\n      alert(\"Please verify the reCAPTCHA.\");\n      return;\n    }\n    const data = {\n      username: username,\n      password: password,\n      captchaToken\n    };\n    try {\n      axios.post(\"http://localhost:3001/auth/login\", data);\n      if (response.data.error) {\n        alert(response.data.error);\n        // Reset CAPTCHA on error\n        if (captchaRef.current) {\n          captchaRef.current.reset(); // Reset the CAPTCHA widget\n          setCaptchaToken(\"\"); // Clear the expired token\n        }\n      } else {\n        localStorage.setItem(\"accessToken\", response.data.token);\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          status: true\n        });\n        navigate(\"/\");\n      }\n    } catch (error) {\n      setErrorMessage(\"Too many login attempts. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: event => {\n        setPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n      sitekey: \"6LdYg40qAAAAAER6JTLxGjJ8I-P5pdpUOvUcPehT\",\n      onChange: onChange,\n      ref: captchaRef // Reference for resetting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \" Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"AHDh1p+gBRzAleuM/GAZRUWIWOA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useRef","axios","Navigate","useNavigate","AuthContext","ReCAPTCHA","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","setAuthState","captchaToken","setCaptchaToken","captchaRef","navigate","onChange","token","login","alert","data","post","response","error","current","reset","localStorage","setItem","id","status","setErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","event","target","value","sitekey","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/HNDSE/Software Security/CW2/client/src/pages/Login.js"],"sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setAuthState } = useContext(AuthContext);\r\n  const [captchaToken, setCaptchaToken] = useState(\"\"); // Store the reCAPTCHA token\r\n  const captchaRef = useRef(null); // Reference to the ReCAPTCHA component\r\n\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const onChange = (token) => {\r\n    setCaptchaToken(token);\r\n  };\r\n\r\n  const login = async () => {\r\n\r\n    if (!captchaToken) {\r\n      alert(\"Please verify the reCAPTCHA.\");\r\n      return;\r\n    }\r\n\r\n    const data = { username: username, password: password,  captchaToken};\r\n\r\n    try{\r\n\r\n    axios.post(\"http://localhost:3001/auth/login\", data);\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n        // Reset CAPTCHA on error\r\n        if (captchaRef.current) {\r\n          captchaRef.current.reset(); // Reset the CAPTCHA widget\r\n          setCaptchaToken(\"\"); // Clear the expired token\r\n        }\r\n\r\n      } else {\r\n        localStorage.setItem(\"accessToken\", response.data.token);\r\n        setAuthState({\r\n          username: response.data.username,\r\n          id: response.data.id,\r\n          status: true,\r\n        });\r\n        navigate(\"/\");\r\n      }\r\n    } catch(error){\r\n      setErrorMessage(\"Too many login attempts. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <label>Username:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(event) => {\r\n          setUsername(event.target.value);\r\n        }}\r\n      />\r\n      <label>Password:</label>\r\n      <input\r\n        type=\"password\"\r\n        onChange={(event) => {\r\n          setPassword(event.target.value);\r\n        }}\r\n      />\r\n\r\n      <ReCAPTCHA\r\n        sitekey=\"6LdYg40qAAAAAER6JTLxGjJ8I-P5pdpUOvUcPehT\"\r\n        onChange={onChange}\r\n        ref={captchaRef} // Reference for resetting\r\n      />\r\n\r\n      <button onClick={login}> Login </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}