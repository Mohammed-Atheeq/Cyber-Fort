{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\HNDSE\\\\Software Security\\\\CW2\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthState\n  } = useContext(AuthContext);\n  const [captchaToken, setCaptchaToken] = useState(\"\"); // Store the reCAPTCHA token\n\n  let navigate = useNavigate();\n  const onChange = token => {\n    setCaptchaToken(token);\n    //console.log(\"Captcha value:\", value);\n  };\n  const login = () => {\n    const data = {\n      username: username,\n      password: password\n    };\n    if (!captchaToken) {\n      alert(\"Please verify the reCAPTCHA.\");\n      return;\n    }\n    axios.post(\"http://localhost:3001/auth/login\", data).then(response => {\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        localStorage.setItem(\"accessToken\", response.data.token);\n        setAuthState({\n          username: response.data.username,\n          id: response.data.id,\n          status: true\n        });\n        navigate(\"/\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: event => {\n        setPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n      sitekey: \"6LdYg40qAAAAAER6JTLxGjJ8I-P5pdpUOvUcPehT\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \" Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"kSUI3HuQuDowc6rpo/wHriuDesw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","axios","Navigate","useNavigate","AuthContext","ReCAPTCHA","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","setAuthState","captchaToken","setCaptchaToken","navigate","onChange","token","login","data","alert","post","then","response","error","localStorage","setItem","id","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","event","target","value","sitekey","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/HNDSE/Software Security/CW2/client/src/pages/Login.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../helpers/AuthContext\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setAuthState } = useContext(AuthContext);\r\n  const [captchaToken, setCaptchaToken] = useState(\"\"); // Store the reCAPTCHA token\r\n\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const onChange = (token) => {\r\n    setCaptchaToken(token);\r\n    //console.log(\"Captcha value:\", value);\r\n  };\r\n\r\n  const login = () => {\r\n    const data = { username: username, password: password,  };\r\n\r\n    if (!captchaToken) {\r\n      alert(\"Please verify the reCAPTCHA.\");\r\n      return;\r\n    }\r\n\r\n    axios.post(\"http://localhost:3001/auth/login\", data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        localStorage.setItem(\"accessToken\", response.data.token);\r\n        setAuthState({\r\n          username: response.data.username,\r\n          id: response.data.id,\r\n          status: true,\r\n        });\r\n        navigate(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <label>Username:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(event) => {\r\n          setUsername(event.target.value);\r\n        }}\r\n      />\r\n      <label>Password:</label>\r\n      <input\r\n        type=\"password\"\r\n        onChange={(event) => {\r\n          setPassword(event.target.value);\r\n        }}\r\n      />\r\n\r\n      <ReCAPTCHA\r\n        sitekey=\"6LdYg40qAAAAAER6JTLxGjJ8I-P5pdpUOvUcPehT\"\r\n        onChange={onChange}\r\n      />\r\n\r\n      <button onClick={login}> Login </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEe;EAAa,CAAC,GAAGd,UAAU,CAACI,WAAW,CAAC;EAChD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAGtD,IAAIkB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE5B,MAAMe,QAAQ,GAAIC,KAAK,IAAK;IAC1BH,eAAe,CAACG,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClB,MAAMC,IAAI,GAAG;MAAEX,QAAQ,EAAEA,QAAQ;MAAEE,QAAQ,EAAEA;IAAW,CAAC;IAEzD,IAAI,CAACG,YAAY,EAAE;MACjBO,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IAEArB,KAAK,CAACsB,IAAI,CAAC,kCAAkC,EAAEF,IAAI,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAK;MACtE,IAAIA,QAAQ,CAACJ,IAAI,CAACK,KAAK,EAAE;QACvBJ,KAAK,CAACG,QAAQ,CAACJ,IAAI,CAACK,KAAK,CAAC;MAC5B,CAAC,MAAM;QACLC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,QAAQ,CAACJ,IAAI,CAACF,KAAK,CAAC;QACxDL,YAAY,CAAC;UACXJ,QAAQ,EAAEe,QAAQ,CAACJ,IAAI,CAACX,QAAQ;UAChCmB,EAAE,EAAEJ,QAAQ,CAACJ,IAAI,CAACQ,EAAE;UACpBC,MAAM,EAAE;QACV,CAAC,CAAC;QACFb,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEV,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzB,OAAA;MAAAyB,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxB7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXnB,QAAQ,EAAGoB,KAAK,IAAK;QACnB3B,WAAW,CAAC2B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MACjC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACF7B,OAAA;MAAAyB,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxB7B,OAAA;MACE8B,IAAI,EAAC,UAAU;MACfnB,QAAQ,EAAGoB,KAAK,IAAK;QACnBzB,WAAW,CAACyB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MACjC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEF7B,OAAA,CAACF,SAAS;MACRoC,OAAO,EAAC,0CAA0C;MAClDvB,QAAQ,EAAEA;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAEF7B,OAAA;MAAQmC,OAAO,EAAEtB,KAAM;MAAAY,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAAC3B,EAAA,CA9DQD,KAAK;EAAA,QAOGL,WAAW;AAAA;AAAAwC,EAAA,GAPnBnC,KAAK;AAgEd,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}